"""
Python阶段考核

说明: 总分100分, 共15道题, 其中1-8题为简答题, 9-15题为编程题, 请在每道题的注释下作答。
提交方式：还是提交到平时交作业的邮箱，抄送邮箱改为：ajiruqianlong@163.com
"""


"""
1. (3分)
Python六种标准数据类型中, 哪些类型数据是可变的? 哪些是序列? 哪些是可迭代对象? 
"""
'可变的：列表，字典，集合，字节数组'
'序列：列表，元组，字符串'
'可迭代对象：字符串，列表，字典，元组，集合，range'



"""
2. (2分)
在Python中, is和==的区别是什么? 
"""

''



"""
3. (2分)
请问列表和元组有什么区别? 
"""
('列表是可变的，元组不可变')




"""
4. (5分)
请描述*args和**kwargs这两个不定长参数的区别?
"""


'*'



"""
5. (5分)
请问__new__方法和__init__方法有什么区别? 
"""





"""
6. (4分)
请描述数组和Python列表的共同点以及不同点? 
"""

'相同点，都可以做切片索引'
'不同点：数组的大小是固定的对称的，需要对等的变换元素；数组会对类型做统一，列表不会'




"""
7. (4分)
请说明Python中break, continue, pass, return的区别? 
"""





"""
8. (5分)
闭包函数通常需要满足哪三个条件? 请定义一个闭包函数并调用它.
"""





"""
9. (6分)
编写一个函数, 接受一个整数列表, 返回一个新列表, 其中包含原列表中所有偶数的平方.
"""

def even_int(lst):
    return [c ** 2 if c % 2 == 0 else c for c in lst]

e = even_int([1, 2, 3, 4])
print(e)

"""
10. (8分)
写一个正则表达式, 使得该正则表达式可以匹配[0, 9]之间的任意数字, 包括浮点数
"""





"""
11. (8分)
编写一个程序, 实现简单的猜数字游戏, 程序先随机生成一个1-100之间的整数, 然后用户开始猜数字,
用户输入猜测的数字, 程序给出提示(猜大了 / 猜小了 / 猜对了), 直到用户猜对该整数为止.
"""






"""
12. (8分)
编写一个函数, 接收一个字符串作为参数, 以字典的形式返回字符串中的每个字符出现的次数.
"""







"""
13. (10分)
定义函数实现: 给你一个整数列表nums, 如果一组数字 (i, j) 满足nums[i] == nums[j], 且i < j,
就可以认为这是一组好数对, 返回好数对的数目.
示例:

输入: nums = [1, 2, 3, 1, 1, 3]
输出: 4
解释: 有4组好数对, 分别是(0, 3), (0, 4), (3, 4), (2, 5), 下标从0开始.
"""
nums = [1, 2, 3, 1, 1, 3]
new_nums =[]
def couple_int(lst):
    for i in range(len(nums)):
        for j in range(i, len(nums)):
            if nums[i] == nums[j] and i < j:
                new_nums.append((i, j))
    return len(new_nums)

c = couple_int(nums)
print(c)


"""
14. (10分)
定义函数实现: 给你一个字符串s, 请你返回两个相同字符之间的最长子字符串的长度, 计算长度时不含这两个字符,
如果不存在这样的子字符串, 则返回-1, 子字符串是指字符串中的一个连续字符序列.


示例 1: 
输入: s = "aa"
输出: 0
解释: 最优的子字符串是两个 'a' 之间的空子字符串

示例 2: 
输入: s = "abca"
输出: 2
解释: 最优的子字符串是 "bc"

示例 3: 
输入: s = "cbzxy"
输出: -1
解释: s 中不存在出现出现两次的字符, 所以返回-1

示例 4: 
输入: s = "cabbac"
输出: 4
解释: 最优的子字符串是 "abba", 其他的非最优解包括 "bb" 和 "".
"""
#好像不大对
def str_same(s):
    for i in s:
        if s.count(i) == 2:
            t = s.strip(i)
    return len(t)


st = str_same("sabbac")
print(st)

"""
15. (20分)
设计一个图书管理系统, 包括以下几个类: 

Book类: 表示图书
包含属性: 书名(title)、作者(author)、ISBN码和出版年份(year_published)
提供方法:
__init__: 初始化图书的属性
display_info: 显示图书的详细信息


Library类: 表示图书馆
包含属性: 图书列表(books, 初始为空列表)
提供方法: 
__init__: 初始化图书馆
add_book: 向图书馆添加一本图书
remove_book: 从图书馆移除一本图书(根据ISBN码移除)
search_book: 根据书名搜索图书, 并返回所有匹配的图书列表(书名确实可以存在同名的情况)
display_books: 显示图书馆中所有图书的详细信息


Bookstore类: 继承自Library类, 表示书店
除了继承了Library的所有方法外, 当前类中还需要提供: 
sell_book: 根据ISBN码销售一本图书(从书店的图书列表中移除)
get_latest_books: 返回书店中出版年份最晚的5本图书(如果不足5本, 则返回剩下所有图书)
"""










